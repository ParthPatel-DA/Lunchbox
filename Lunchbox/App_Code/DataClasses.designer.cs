#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Database2")]
public partial class DataClassesDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertCityMaster(CityMaster instance);
  partial void UpdateCityMaster(CityMaster instance);
  partial void DeleteCityMaster(CityMaster instance);
  partial void InsertCountryMaster(CountryMaster instance);
  partial void UpdateCountryMaster(CountryMaster instance);
  partial void DeleteCountryMaster(CountryMaster instance);
  partial void InsertStateMaster(StateMaster instance);
  partial void UpdateStateMaster(StateMaster instance);
  partial void DeleteStateMaster(StateMaster instance);
  partial void InserttblAction(tblAction instance);
  partial void UpdatetblAction(tblAction instance);
  partial void DeletetblAction(tblAction instance);
  partial void InserttblAddress(tblAddress instance);
  partial void UpdatetblAddress(tblAddress instance);
  partial void DeletetblAddress(tblAddress instance);
  partial void InserttblAdmin(tblAdmin instance);
  partial void UpdatetblAdmin(tblAdmin instance);
  partial void DeletetblAdmin(tblAdmin instance);
  partial void InserttblAlbum(tblAlbum instance);
  partial void UpdatetblAlbum(tblAlbum instance);
  partial void DeletetblAlbum(tblAlbum instance);
  partial void InserttblArea(tblArea instance);
  partial void UpdatetblArea(tblArea instance);
  partial void DeletetblArea(tblArea instance);
  partial void Inserttblcart(tblcart instance);
  partial void Updatetblcart(tblcart instance);
  partial void Deletetblcart(tblcart instance);
  partial void InserttblClient(tblClient instance);
  partial void UpdatetblClient(tblClient instance);
  partial void DeletetblClient(tblClient instance);
  partial void InserttblCM(tblCM instance);
  partial void UpdatetblCM(tblCM instance);
  partial void DeletetblCM(tblCM instance);
  partial void InserttblError(tblError instance);
  partial void UpdatetblError(tblError instance);
  partial void DeletetblError(tblError instance);
  partial void InserttblFeedback(tblFeedback instance);
  partial void UpdatetblFeedback(tblFeedback instance);
  partial void DeletetblFeedback(tblFeedback instance);
  partial void InserttblImage(tblImage instance);
  partial void UpdatetblImage(tblImage instance);
  partial void DeletetblImage(tblImage instance);
  partial void InserttblInquiry(tblInquiry instance);
  partial void UpdatetblInquiry(tblInquiry instance);
  partial void DeletetblInquiry(tblInquiry instance);
  partial void Inserttblitem(tblitem instance);
  partial void Updatetblitem(tblitem instance);
  partial void Deletetblitem(tblitem instance);
  partial void Inserttbllog(tbllog instance);
  partial void Updatetbllog(tbllog instance);
  partial void Deletetbllog(tbllog instance);
  partial void InserttblMealPlan(tblMealPlan instance);
  partial void UpdatetblMealPlan(tblMealPlan instance);
  partial void DeletetblMealPlan(tblMealPlan instance);
  partial void InserttblMenuDetail(tblMenuDetail instance);
  partial void UpdatetblMenuDetail(tblMenuDetail instance);
  partial void DeletetblMenuDetail(tblMenuDetail instance);
  partial void InserttblNotification(tblNotification instance);
  partial void UpdatetblNotification(tblNotification instance);
  partial void DeletetblNotification(tblNotification instance);
  partial void InserttblNotificationDetail(tblNotificationDetail instance);
  partial void UpdatetblNotificationDetail(tblNotificationDetail instance);
  partial void DeletetblNotificationDetail(tblNotificationDetail instance);
  partial void InserttblOrder(tblOrder instance);
  partial void UpdatetblOrder(tblOrder instance);
  partial void DeletetblOrder(tblOrder instance);
  partial void InserttblPackage(tblPackage instance);
  partial void UpdatetblPackage(tblPackage instance);
  partial void DeletetblPackage(tblPackage instance);
  partial void InserttblRate(tblRate instance);
  partial void UpdatetblRate(tblRate instance);
  partial void DeletetblRate(tblRate instance);
  partial void Inserttblreferfriend(tblreferfriend instance);
  partial void Updatetblreferfriend(tblreferfriend instance);
  partial void Deletetblreferfriend(tblreferfriend instance);
  partial void InserttblServiceProvider(tblServiceProvider instance);
  partial void UpdatetblServiceProvider(tblServiceProvider instance);
  partial void DeletetblServiceProvider(tblServiceProvider instance);
  partial void InserttblSPPackage(tblSPPackage instance);
  partial void UpdatetblSPPackage(tblSPPackage instance);
  partial void DeletetblSPPackage(tblSPPackage instance);
  partial void InserttblSreviceOrder(tblSreviceOrder instance);
  partial void UpdatetblSreviceOrder(tblSreviceOrder instance);
  partial void DeletetblSreviceOrder(tblSreviceOrder instance);
  #endregion
	
	public DataClassesDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["Database2ConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<CityMaster> CityMasters
	{
		get
		{
			return this.GetTable<CityMaster>();
		}
	}
	
	public System.Data.Linq.Table<CountryMaster> CountryMasters
	{
		get
		{
			return this.GetTable<CountryMaster>();
		}
	}
	
	public System.Data.Linq.Table<StateMaster> StateMasters
	{
		get
		{
			return this.GetTable<StateMaster>();
		}
	}
	
	public System.Data.Linq.Table<tblAction> tblActions
	{
		get
		{
			return this.GetTable<tblAction>();
		}
	}
	
	public System.Data.Linq.Table<tblAddress> tblAddresses
	{
		get
		{
			return this.GetTable<tblAddress>();
		}
	}
	
	public System.Data.Linq.Table<tblAdmin> tblAdmins
	{
		get
		{
			return this.GetTable<tblAdmin>();
		}
	}
	
	public System.Data.Linq.Table<tblAlbum> tblAlbums
	{
		get
		{
			return this.GetTable<tblAlbum>();
		}
	}
	
	public System.Data.Linq.Table<tblArea> tblAreas
	{
		get
		{
			return this.GetTable<tblArea>();
		}
	}
	
	public System.Data.Linq.Table<tblcart> tblcarts
	{
		get
		{
			return this.GetTable<tblcart>();
		}
	}
	
	public System.Data.Linq.Table<tblClient> tblClients
	{
		get
		{
			return this.GetTable<tblClient>();
		}
	}
	
	public System.Data.Linq.Table<tblCM> tblCMs
	{
		get
		{
			return this.GetTable<tblCM>();
		}
	}
	
	public System.Data.Linq.Table<tblError> tblErrors
	{
		get
		{
			return this.GetTable<tblError>();
		}
	}
	
	public System.Data.Linq.Table<tblFeedback> tblFeedbacks
	{
		get
		{
			return this.GetTable<tblFeedback>();
		}
	}
	
	public System.Data.Linq.Table<tblImage> tblImages
	{
		get
		{
			return this.GetTable<tblImage>();
		}
	}
	
	public System.Data.Linq.Table<tblInquiry> tblInquiries
	{
		get
		{
			return this.GetTable<tblInquiry>();
		}
	}
	
	public System.Data.Linq.Table<tblitem> tblitems
	{
		get
		{
			return this.GetTable<tblitem>();
		}
	}
	
	public System.Data.Linq.Table<tbllog> tbllogs
	{
		get
		{
			return this.GetTable<tbllog>();
		}
	}
	
	public System.Data.Linq.Table<tblMealPlan> tblMealPlans
	{
		get
		{
			return this.GetTable<tblMealPlan>();
		}
	}
	
	public System.Data.Linq.Table<tblMenuDetail> tblMenuDetails
	{
		get
		{
			return this.GetTable<tblMenuDetail>();
		}
	}
	
	public System.Data.Linq.Table<tblNotification> tblNotifications
	{
		get
		{
			return this.GetTable<tblNotification>();
		}
	}
	
	public System.Data.Linq.Table<tblNotificationDetail> tblNotificationDetails
	{
		get
		{
			return this.GetTable<tblNotificationDetail>();
		}
	}
	
	public System.Data.Linq.Table<tblOrder> tblOrders
	{
		get
		{
			return this.GetTable<tblOrder>();
		}
	}
	
	public System.Data.Linq.Table<tblPackage> tblPackages
	{
		get
		{
			return this.GetTable<tblPackage>();
		}
	}
	
	public System.Data.Linq.Table<tblRate> tblRates
	{
		get
		{
			return this.GetTable<tblRate>();
		}
	}
	
	public System.Data.Linq.Table<tblreferfriend> tblreferfriends
	{
		get
		{
			return this.GetTable<tblreferfriend>();
		}
	}
	
	public System.Data.Linq.Table<tblServiceProvider> tblServiceProviders
	{
		get
		{
			return this.GetTable<tblServiceProvider>();
		}
	}
	
	public System.Data.Linq.Table<tblSPPackage> tblSPPackages
	{
		get
		{
			return this.GetTable<tblSPPackage>();
		}
	}
	
	public System.Data.Linq.Table<tblSreviceOrder> tblSreviceOrders
	{
		get
		{
			return this.GetTable<tblSreviceOrder>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CityMaster")]
public partial class CityMaster : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _Name;
	
	private System.Nullable<int> _StateID;
	
	private EntityRef<StateMaster> _StateMaster;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnStateIDChanging(System.Nullable<int> value);
    partial void OnStateIDChanged();
    #endregion
	
	public CityMaster()
	{
		this._StateMaster = default(EntityRef<StateMaster>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateID", DbType="Int")]
	public System.Nullable<int> StateID
	{
		get
		{
			return this._StateID;
		}
		set
		{
			if ((this._StateID != value))
			{
				if (this._StateMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnStateIDChanging(value);
				this.SendPropertyChanging();
				this._StateID = value;
				this.SendPropertyChanged("StateID");
				this.OnStateIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StateMaster_CityMaster", Storage="_StateMaster", ThisKey="StateID", OtherKey="ID", IsForeignKey=true)]
	public StateMaster StateMaster
	{
		get
		{
			return this._StateMaster.Entity;
		}
		set
		{
			StateMaster previousValue = this._StateMaster.Entity;
			if (((previousValue != value) 
						|| (this._StateMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._StateMaster.Entity = null;
					previousValue.CityMasters.Remove(this);
				}
				this._StateMaster.Entity = value;
				if ((value != null))
				{
					value.CityMasters.Add(this);
					this._StateID = value.ID;
				}
				else
				{
					this._StateID = default(Nullable<int>);
				}
				this.SendPropertyChanged("StateMaster");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CountryMaster")]
public partial class CountryMaster : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _Name;
	
	private string _CountryCode;
	
	private EntitySet<StateMaster> _StateMasters;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCountryCodeChanging(string value);
    partial void OnCountryCodeChanged();
    #endregion
	
	public CountryMaster()
	{
		this._StateMasters = new EntitySet<StateMaster>(new Action<StateMaster>(this.attach_StateMasters), new Action<StateMaster>(this.detach_StateMasters));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryCode", DbType="VarChar(5)")]
	public string CountryCode
	{
		get
		{
			return this._CountryCode;
		}
		set
		{
			if ((this._CountryCode != value))
			{
				this.OnCountryCodeChanging(value);
				this.SendPropertyChanging();
				this._CountryCode = value;
				this.SendPropertyChanged("CountryCode");
				this.OnCountryCodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CountryMaster_StateMaster", Storage="_StateMasters", ThisKey="ID", OtherKey="CountryID")]
	public EntitySet<StateMaster> StateMasters
	{
		get
		{
			return this._StateMasters;
		}
		set
		{
			this._StateMasters.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_StateMasters(StateMaster entity)
	{
		this.SendPropertyChanging();
		entity.CountryMaster = this;
	}
	
	private void detach_StateMasters(StateMaster entity)
	{
		this.SendPropertyChanging();
		entity.CountryMaster = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StateMaster")]
public partial class StateMaster : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _Name;
	
	private System.Nullable<int> _CountryID;
	
	private EntitySet<CityMaster> _CityMasters;
	
	private EntityRef<CountryMaster> _CountryMaster;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCountryIDChanging(System.Nullable<int> value);
    partial void OnCountryIDChanged();
    #endregion
	
	public StateMaster()
	{
		this._CityMasters = new EntitySet<CityMaster>(new Action<CityMaster>(this.attach_CityMasters), new Action<CityMaster>(this.detach_CityMasters));
		this._CountryMaster = default(EntityRef<CountryMaster>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID", DbType="Int")]
	public System.Nullable<int> CountryID
	{
		get
		{
			return this._CountryID;
		}
		set
		{
			if ((this._CountryID != value))
			{
				if (this._CountryMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCountryIDChanging(value);
				this.SendPropertyChanging();
				this._CountryID = value;
				this.SendPropertyChanged("CountryID");
				this.OnCountryIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StateMaster_CityMaster", Storage="_CityMasters", ThisKey="ID", OtherKey="StateID")]
	public EntitySet<CityMaster> CityMasters
	{
		get
		{
			return this._CityMasters;
		}
		set
		{
			this._CityMasters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CountryMaster_StateMaster", Storage="_CountryMaster", ThisKey="CountryID", OtherKey="ID", IsForeignKey=true)]
	public CountryMaster CountryMaster
	{
		get
		{
			return this._CountryMaster.Entity;
		}
		set
		{
			CountryMaster previousValue = this._CountryMaster.Entity;
			if (((previousValue != value) 
						|| (this._CountryMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._CountryMaster.Entity = null;
					previousValue.StateMasters.Remove(this);
				}
				this._CountryMaster.Entity = value;
				if ((value != null))
				{
					value.StateMasters.Add(this);
					this._CountryID = value.ID;
				}
				else
				{
					this._CountryID = default(Nullable<int>);
				}
				this.SendPropertyChanged("CountryMaster");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_CityMasters(CityMaster entity)
	{
		this.SendPropertyChanging();
		entity.StateMaster = this;
	}
	
	private void detach_CityMasters(CityMaster entity)
	{
		this.SendPropertyChanging();
		entity.StateMaster = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblAction")]
public partial class tblAction : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ActionID;
	
	private string _PageName;
	
	private string _WebAction;
	
	private string _UserType;
	
	private int _UserID;
	
	private System.DateTime _CreatedOn;
	
	private string _MacAddress;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnActionIDChanging(int value);
    partial void OnActionIDChanged();
    partial void OnPageNameChanging(string value);
    partial void OnPageNameChanged();
    partial void OnWebActionChanging(string value);
    partial void OnWebActionChanged();
    partial void OnUserTypeChanging(string value);
    partial void OnUserTypeChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    partial void OnMacAddressChanging(string value);
    partial void OnMacAddressChanged();
    #endregion
	
	public tblAction()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ActionID
	{
		get
		{
			return this._ActionID;
		}
		set
		{
			if ((this._ActionID != value))
			{
				this.OnActionIDChanging(value);
				this.SendPropertyChanging();
				this._ActionID = value;
				this.SendPropertyChanged("ActionID");
				this.OnActionIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string PageName
	{
		get
		{
			return this._PageName;
		}
		set
		{
			if ((this._PageName != value))
			{
				this.OnPageNameChanging(value);
				this.SendPropertyChanging();
				this._PageName = value;
				this.SendPropertyChanged("PageName");
				this.OnPageNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebAction", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string WebAction
	{
		get
		{
			return this._WebAction;
		}
		set
		{
			if ((this._WebAction != value))
			{
				this.OnWebActionChanging(value);
				this.SendPropertyChanging();
				this._WebAction = value;
				this.SendPropertyChanged("WebAction");
				this.OnWebActionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserType", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string UserType
	{
		get
		{
			return this._UserType;
		}
		set
		{
			if ((this._UserType != value))
			{
				this.OnUserTypeChanging(value);
				this.SendPropertyChanging();
				this._UserType = value;
				this.SendPropertyChanged("UserType");
				this.OnUserTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
	public int UserID
	{
		get
		{
			return this._UserID;
		}
		set
		{
			if ((this._UserID != value))
			{
				this.OnUserIDChanging(value);
				this.SendPropertyChanging();
				this._UserID = value;
				this.SendPropertyChanged("UserID");
				this.OnUserIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
	public System.DateTime CreatedOn
	{
		get
		{
			return this._CreatedOn;
		}
		set
		{
			if ((this._CreatedOn != value))
			{
				this.OnCreatedOnChanging(value);
				this.SendPropertyChanging();
				this._CreatedOn = value;
				this.SendPropertyChanged("CreatedOn");
				this.OnCreatedOnChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MacAddress", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
	public string MacAddress
	{
		get
		{
			return this._MacAddress;
		}
		set
		{
			if ((this._MacAddress != value))
			{
				this.OnMacAddressChanging(value);
				this.SendPropertyChanging();
				this._MacAddress = value;
				this.SendPropertyChanged("MacAddress");
				this.OnMacAddressChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblAddress")]
public partial class tblAddress : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _AddressID;
	
	private string _Address;
	
	private string _Area;
	
	private string _Landmark;
	
	private int _CityID;
	
	private string _PincodeNo;
	
	private bool _IsActive;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAddressIDChanging(int value);
    partial void OnAddressIDChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnAreaChanging(string value);
    partial void OnAreaChanged();
    partial void OnLandmarkChanging(string value);
    partial void OnLandmarkChanged();
    partial void OnCityIDChanging(int value);
    partial void OnCityIDChanged();
    partial void OnPincodeNoChanging(string value);
    partial void OnPincodeNoChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
	
	public tblAddress()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int AddressID
	{
		get
		{
			return this._AddressID;
		}
		set
		{
			if ((this._AddressID != value))
			{
				this.OnAddressIDChanging(value);
				this.SendPropertyChanging();
				this._AddressID = value;
				this.SendPropertyChanged("AddressID");
				this.OnAddressIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
	public string Address
	{
		get
		{
			return this._Address;
		}
		set
		{
			if ((this._Address != value))
			{
				this.OnAddressChanging(value);
				this.SendPropertyChanging();
				this._Address = value;
				this.SendPropertyChanged("Address");
				this.OnAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Area", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Area
	{
		get
		{
			return this._Area;
		}
		set
		{
			if ((this._Area != value))
			{
				this.OnAreaChanging(value);
				this.SendPropertyChanging();
				this._Area = value;
				this.SendPropertyChanged("Area");
				this.OnAreaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Landmark", DbType="VarChar(50)")]
	public string Landmark
	{
		get
		{
			return this._Landmark;
		}
		set
		{
			if ((this._Landmark != value))
			{
				this.OnLandmarkChanging(value);
				this.SendPropertyChanging();
				this._Landmark = value;
				this.SendPropertyChanged("Landmark");
				this.OnLandmarkChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityID", DbType="Int NOT NULL")]
	public int CityID
	{
		get
		{
			return this._CityID;
		}
		set
		{
			if ((this._CityID != value))
			{
				this.OnCityIDChanging(value);
				this.SendPropertyChanging();
				this._CityID = value;
				this.SendPropertyChanged("CityID");
				this.OnCityIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PincodeNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string PincodeNo
	{
		get
		{
			return this._PincodeNo;
		}
		set
		{
			if ((this._PincodeNo != value))
			{
				this.OnPincodeNoChanging(value);
				this.SendPropertyChanging();
				this._PincodeNo = value;
				this.SendPropertyChanged("PincodeNo");
				this.OnPincodeNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
	public bool IsActive
	{
		get
		{
			return this._IsActive;
		}
		set
		{
			if ((this._IsActive != value))
			{
				this.OnIsActiveChanging(value);
				this.SendPropertyChanging();
				this._IsActive = value;
				this.SendPropertyChanged("IsActive");
				this.OnIsActiveChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblAdmin")]
public partial class tblAdmin : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _AdminID;
	
	private string _FirstName;
	
	private string _LastName;
	
	private string _Password;
	
	private string _Email;
	
	private string _ContactNO;
	
	private System.Nullable<int> _ImageID;
	
	private bool _IsInsert;
	
	private bool _IsUpdate;
	
	private bool _IsDelete;
	
	private bool _IsSuper;
	
	private bool _IsActive;
	
	private System.Nullable<int> _CreatedBy;
	
	private System.DateTime _CreatedOn;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAdminIDChanging(int value);
    partial void OnAdminIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnContactNOChanging(string value);
    partial void OnContactNOChanged();
    partial void OnImageIDChanging(System.Nullable<int> value);
    partial void OnImageIDChanged();
    partial void OnIsInsertChanging(bool value);
    partial void OnIsInsertChanged();
    partial void OnIsUpdateChanging(bool value);
    partial void OnIsUpdateChanged();
    partial void OnIsDeleteChanging(bool value);
    partial void OnIsDeleteChanged();
    partial void OnIsSuperChanging(bool value);
    partial void OnIsSuperChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    #endregion
	
	public tblAdmin()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int AdminID
	{
		get
		{
			return this._AdminID;
		}
		set
		{
			if ((this._AdminID != value))
			{
				this.OnAdminIDChanging(value);
				this.SendPropertyChanging();
				this._AdminID = value;
				this.SendPropertyChanged("AdminID");
				this.OnAdminIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string FirstName
	{
		get
		{
			return this._FirstName;
		}
		set
		{
			if ((this._FirstName != value))
			{
				this.OnFirstNameChanging(value);
				this.SendPropertyChanging();
				this._FirstName = value;
				this.SendPropertyChanged("FirstName");
				this.OnFirstNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string LastName
	{
		get
		{
			return this._LastName;
		}
		set
		{
			if ((this._LastName != value))
			{
				this.OnLastNameChanging(value);
				this.SendPropertyChanging();
				this._LastName = value;
				this.SendPropertyChanged("LastName");
				this.OnLastNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
	public string Password
	{
		get
		{
			return this._Password;
		}
		set
		{
			if ((this._Password != value))
			{
				this.OnPasswordChanging(value);
				this.SendPropertyChanging();
				this._Password = value;
				this.SendPropertyChanged("Password");
				this.OnPasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNO", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
	public string ContactNO
	{
		get
		{
			return this._ContactNO;
		}
		set
		{
			if ((this._ContactNO != value))
			{
				this.OnContactNOChanging(value);
				this.SendPropertyChanging();
				this._ContactNO = value;
				this.SendPropertyChanged("ContactNO");
				this.OnContactNOChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageID", DbType="Int")]
	public System.Nullable<int> ImageID
	{
		get
		{
			return this._ImageID;
		}
		set
		{
			if ((this._ImageID != value))
			{
				this.OnImageIDChanging(value);
				this.SendPropertyChanging();
				this._ImageID = value;
				this.SendPropertyChanged("ImageID");
				this.OnImageIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInsert", DbType="Bit NOT NULL")]
	public bool IsInsert
	{
		get
		{
			return this._IsInsert;
		}
		set
		{
			if ((this._IsInsert != value))
			{
				this.OnIsInsertChanging(value);
				this.SendPropertyChanging();
				this._IsInsert = value;
				this.SendPropertyChanged("IsInsert");
				this.OnIsInsertChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUpdate", DbType="Bit NOT NULL")]
	public bool IsUpdate
	{
		get
		{
			return this._IsUpdate;
		}
		set
		{
			if ((this._IsUpdate != value))
			{
				this.OnIsUpdateChanging(value);
				this.SendPropertyChanging();
				this._IsUpdate = value;
				this.SendPropertyChanged("IsUpdate");
				this.OnIsUpdateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDelete", DbType="Bit NOT NULL")]
	public bool IsDelete
	{
		get
		{
			return this._IsDelete;
		}
		set
		{
			if ((this._IsDelete != value))
			{
				this.OnIsDeleteChanging(value);
				this.SendPropertyChanging();
				this._IsDelete = value;
				this.SendPropertyChanged("IsDelete");
				this.OnIsDeleteChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSuper", DbType="Bit NOT NULL")]
	public bool IsSuper
	{
		get
		{
			return this._IsSuper;
		}
		set
		{
			if ((this._IsSuper != value))
			{
				this.OnIsSuperChanging(value);
				this.SendPropertyChanging();
				this._IsSuper = value;
				this.SendPropertyChanged("IsSuper");
				this.OnIsSuperChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
	public bool IsActive
	{
		get
		{
			return this._IsActive;
		}
		set
		{
			if ((this._IsActive != value))
			{
				this.OnIsActiveChanging(value);
				this.SendPropertyChanging();
				this._IsActive = value;
				this.SendPropertyChanged("IsActive");
				this.OnIsActiveChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
	public System.Nullable<int> CreatedBy
	{
		get
		{
			return this._CreatedBy;
		}
		set
		{
			if ((this._CreatedBy != value))
			{
				this.OnCreatedByChanging(value);
				this.SendPropertyChanging();
				this._CreatedBy = value;
				this.SendPropertyChanged("CreatedBy");
				this.OnCreatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="Date NOT NULL")]
	public System.DateTime CreatedOn
	{
		get
		{
			return this._CreatedOn;
		}
		set
		{
			if ((this._CreatedOn != value))
			{
				this.OnCreatedOnChanging(value);
				this.SendPropertyChanging();
				this._CreatedOn = value;
				this.SendPropertyChanged("CreatedOn");
				this.OnCreatedOnChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblAlbum")]
public partial class tblAlbum : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _AlbumID;
	
	private string _AlbumName;
	
	private bool _IsActive;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAlbumIDChanging(int value);
    partial void OnAlbumIDChanged();
    partial void OnAlbumNameChanging(string value);
    partial void OnAlbumNameChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
	
	public tblAlbum()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlbumID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int AlbumID
	{
		get
		{
			return this._AlbumID;
		}
		set
		{
			if ((this._AlbumID != value))
			{
				this.OnAlbumIDChanging(value);
				this.SendPropertyChanging();
				this._AlbumID = value;
				this.SendPropertyChanged("AlbumID");
				this.OnAlbumIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlbumName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
	public string AlbumName
	{
		get
		{
			return this._AlbumName;
		}
		set
		{
			if ((this._AlbumName != value))
			{
				this.OnAlbumNameChanging(value);
				this.SendPropertyChanging();
				this._AlbumName = value;
				this.SendPropertyChanged("AlbumName");
				this.OnAlbumNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
	public bool IsActive
	{
		get
		{
			return this._IsActive;
		}
		set
		{
			if ((this._IsActive != value))
			{
				this.OnIsActiveChanging(value);
				this.SendPropertyChanging();
				this._IsActive = value;
				this.SendPropertyChanged("IsActive");
				this.OnIsActiveChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblArea")]
public partial class tblArea : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _AreaID;
	
	private string _AreaName;
	
	private int _PinCode;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAreaIDChanging(int value);
    partial void OnAreaIDChanged();
    partial void OnAreaNameChanging(string value);
    partial void OnAreaNameChanged();
    partial void OnPinCodeChanging(int value);
    partial void OnPinCodeChanged();
    #endregion
	
	public tblArea()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int AreaID
	{
		get
		{
			return this._AreaID;
		}
		set
		{
			if ((this._AreaID != value))
			{
				this.OnAreaIDChanging(value);
				this.SendPropertyChanging();
				this._AreaID = value;
				this.SendPropertyChanged("AreaID");
				this.OnAreaIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string AreaName
	{
		get
		{
			return this._AreaName;
		}
		set
		{
			if ((this._AreaName != value))
			{
				this.OnAreaNameChanging(value);
				this.SendPropertyChanging();
				this._AreaName = value;
				this.SendPropertyChanged("AreaName");
				this.OnAreaNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PinCode", DbType="Int NOT NULL")]
	public int PinCode
	{
		get
		{
			return this._PinCode;
		}
		set
		{
			if ((this._PinCode != value))
			{
				this.OnPinCodeChanging(value);
				this.SendPropertyChanging();
				this._PinCode = value;
				this.SendPropertyChanged("PinCode");
				this.OnPinCodeChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblcart")]
public partial class tblcart : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _CartID;
	
	private System.Nullable<int> _MealID;
	
	private System.Nullable<int> _ItemID;
	
	private System.Nullable<int> _ClientID;
	
	private string _MACAddress;
	
	private int _Quantity;
	
	private System.DateTime _Date;
	
	private bool _IsActive;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCartIDChanging(int value);
    partial void OnCartIDChanged();
    partial void OnMealIDChanging(System.Nullable<int> value);
    partial void OnMealIDChanged();
    partial void OnItemIDChanging(System.Nullable<int> value);
    partial void OnItemIDChanged();
    partial void OnClientIDChanging(System.Nullable<int> value);
    partial void OnClientIDChanged();
    partial void OnMACAddressChanging(string value);
    partial void OnMACAddressChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
	
	public tblcart()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CartID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int CartID
	{
		get
		{
			return this._CartID;
		}
		set
		{
			if ((this._CartID != value))
			{
				this.OnCartIDChanging(value);
				this.SendPropertyChanging();
				this._CartID = value;
				this.SendPropertyChanged("CartID");
				this.OnCartIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MealID", DbType="Int")]
	public System.Nullable<int> MealID
	{
		get
		{
			return this._MealID;
		}
		set
		{
			if ((this._MealID != value))
			{
				this.OnMealIDChanging(value);
				this.SendPropertyChanging();
				this._MealID = value;
				this.SendPropertyChanged("MealID");
				this.OnMealIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", DbType="Int")]
	public System.Nullable<int> ItemID
	{
		get
		{
			return this._ItemID;
		}
		set
		{
			if ((this._ItemID != value))
			{
				this.OnItemIDChanging(value);
				this.SendPropertyChanging();
				this._ItemID = value;
				this.SendPropertyChanged("ItemID");
				this.OnItemIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="Int")]
	public System.Nullable<int> ClientID
	{
		get
		{
			return this._ClientID;
		}
		set
		{
			if ((this._ClientID != value))
			{
				this.OnClientIDChanging(value);
				this.SendPropertyChanging();
				this._ClientID = value;
				this.SendPropertyChanged("ClientID");
				this.OnClientIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MACAddress", DbType="NChar(12) NOT NULL", CanBeNull=false)]
	public string MACAddress
	{
		get
		{
			return this._MACAddress;
		}
		set
		{
			if ((this._MACAddress != value))
			{
				this.OnMACAddressChanging(value);
				this.SendPropertyChanging();
				this._MACAddress = value;
				this.SendPropertyChanged("MACAddress");
				this.OnMACAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
	public int Quantity
	{
		get
		{
			return this._Quantity;
		}
		set
		{
			if ((this._Quantity != value))
			{
				this.OnQuantityChanging(value);
				this.SendPropertyChanging();
				this._Quantity = value;
				this.SendPropertyChanged("Quantity");
				this.OnQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date NOT NULL")]
	public System.DateTime Date
	{
		get
		{
			return this._Date;
		}
		set
		{
			if ((this._Date != value))
			{
				this.OnDateChanging(value);
				this.SendPropertyChanging();
				this._Date = value;
				this.SendPropertyChanged("Date");
				this.OnDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
	public bool IsActive
	{
		get
		{
			return this._IsActive;
		}
		set
		{
			if ((this._IsActive != value))
			{
				this.OnIsActiveChanging(value);
				this.SendPropertyChanging();
				this._IsActive = value;
				this.SendPropertyChanged("IsActive");
				this.OnIsActiveChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblClient")]
public partial class tblClient : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ClientID;
	
	private int _AddressID;
	
	private string _FirstName;
	
	private string _LastName;
	
	private string _Password;
	
	private int _ImageID;
	
	private string _Email;
	
	private string _ContactNo;
	
	private bool _IsActive;
	
	private System.DateTime _CreatedOn;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClientIDChanging(int value);
    partial void OnClientIDChanged();
    partial void OnAddressIDChanging(int value);
    partial void OnAddressIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnImageIDChanging(int value);
    partial void OnImageIDChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnContactNoChanging(string value);
    partial void OnContactNoChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    #endregion
	
	public tblClient()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ClientID
	{
		get
		{
			return this._ClientID;
		}
		set
		{
			if ((this._ClientID != value))
			{
				this.OnClientIDChanging(value);
				this.SendPropertyChanging();
				this._ClientID = value;
				this.SendPropertyChanged("ClientID");
				this.OnClientIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressID", DbType="Int NOT NULL")]
	public int AddressID
	{
		get
		{
			return this._AddressID;
		}
		set
		{
			if ((this._AddressID != value))
			{
				this.OnAddressIDChanging(value);
				this.SendPropertyChanging();
				this._AddressID = value;
				this.SendPropertyChanged("AddressID");
				this.OnAddressIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string FirstName
	{
		get
		{
			return this._FirstName;
		}
		set
		{
			if ((this._FirstName != value))
			{
				this.OnFirstNameChanging(value);
				this.SendPropertyChanging();
				this._FirstName = value;
				this.SendPropertyChanged("FirstName");
				this.OnFirstNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string LastName
	{
		get
		{
			return this._LastName;
		}
		set
		{
			if ((this._LastName != value))
			{
				this.OnLastNameChanging(value);
				this.SendPropertyChanging();
				this._LastName = value;
				this.SendPropertyChanged("LastName");
				this.OnLastNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
	public string Password
	{
		get
		{
			return this._Password;
		}
		set
		{
			if ((this._Password != value))
			{
				this.OnPasswordChanging(value);
				this.SendPropertyChanging();
				this._Password = value;
				this.SendPropertyChanged("Password");
				this.OnPasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageID", DbType="Int NOT NULL")]
	public int ImageID
	{
		get
		{
			return this._ImageID;
		}
		set
		{
			if ((this._ImageID != value))
			{
				this.OnImageIDChanging(value);
				this.SendPropertyChanging();
				this._ImageID = value;
				this.SendPropertyChanged("ImageID");
				this.OnImageIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(254) NOT NULL", CanBeNull=false)]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNo", DbType="VarChar(20)")]
	public string ContactNo
	{
		get
		{
			return this._ContactNo;
		}
		set
		{
			if ((this._ContactNo != value))
			{
				this.OnContactNoChanging(value);
				this.SendPropertyChanging();
				this._ContactNo = value;
				this.SendPropertyChanged("ContactNo");
				this.OnContactNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
	public bool IsActive
	{
		get
		{
			return this._IsActive;
		}
		set
		{
			if ((this._IsActive != value))
			{
				this.OnIsActiveChanging(value);
				this.SendPropertyChanging();
				this._IsActive = value;
				this.SendPropertyChanged("IsActive");
				this.OnIsActiveChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
	public System.DateTime CreatedOn
	{
		get
		{
			return this._CreatedOn;
		}
		set
		{
			if ((this._CreatedOn != value))
			{
				this.OnCreatedOnChanging(value);
				this.SendPropertyChanging();
				this._CreatedOn = value;
				this.SendPropertyChanged("CreatedOn");
				this.OnCreatedOnChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblCMS")]
public partial class tblCM : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _CMSID;
	
	private string _Title;
	
	private string _Content;
	
	private System.Nullable<bool> _IsActive;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCMSIDChanging(int value);
    partial void OnCMSIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    #endregion
	
	public tblCM()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMSID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int CMSID
	{
		get
		{
			return this._CMSID;
		}
		set
		{
			if ((this._CMSID != value))
			{
				this.OnCMSIDChanging(value);
				this.SendPropertyChanging();
				this._CMSID = value;
				this.SendPropertyChanged("CMSID");
				this.OnCMSIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(50)")]
	public string Title
	{
		get
		{
			return this._Title;
		}
		set
		{
			if ((this._Title != value))
			{
				this.OnTitleChanging(value);
				this.SendPropertyChanging();
				this._Title = value;
				this.SendPropertyChanged("Title");
				this.OnTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NVarChar(MAX)")]
	public string Content
	{
		get
		{
			return this._Content;
		}
		set
		{
			if ((this._Content != value))
			{
				this.OnContentChanging(value);
				this.SendPropertyChanging();
				this._Content = value;
				this.SendPropertyChanged("Content");
				this.OnContentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
	public System.Nullable<bool> IsActive
	{
		get
		{
			return this._IsActive;
		}
		set
		{
			if ((this._IsActive != value))
			{
				this.OnIsActiveChanging(value);
				this.SendPropertyChanging();
				this._IsActive = value;
				this.SendPropertyChanged("IsActive");
				this.OnIsActiveChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblError")]
public partial class tblError : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ErrorID;
	
	private string _PageName;
	
	private string _Description;
	
	private string _UserType;
	
	private System.Nullable<int> _UserID;
	
	private System.Nullable<int> _AdminID;
	
	private System.Nullable<System.DateTime> _CreatedOn;
	
	private string _MacAddress;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnErrorIDChanging(int value);
    partial void OnErrorIDChanged();
    partial void OnPageNameChanging(string value);
    partial void OnPageNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnUserTypeChanging(string value);
    partial void OnUserTypeChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnAdminIDChanging(System.Nullable<int> value);
    partial void OnAdminIDChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnMacAddressChanging(string value);
    partial void OnMacAddressChanged();
    #endregion
	
	public tblError()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ErrorID
	{
		get
		{
			return this._ErrorID;
		}
		set
		{
			if ((this._ErrorID != value))
			{
				this.OnErrorIDChanging(value);
				this.SendPropertyChanging();
				this._ErrorID = value;
				this.SendPropertyChanged("ErrorID");
				this.OnErrorIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageName", DbType="VarChar(50)")]
	public string PageName
	{
		get
		{
			return this._PageName;
		}
		set
		{
			if ((this._PageName != value))
			{
				this.OnPageNameChanging(value);
				this.SendPropertyChanging();
				this._PageName = value;
				this.SendPropertyChanged("PageName");
				this.OnPageNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(50)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserType", DbType="VarChar(50)")]
	public string UserType
	{
		get
		{
			return this._UserType;
		}
		set
		{
			if ((this._UserType != value))
			{
				this.OnUserTypeChanging(value);
				this.SendPropertyChanging();
				this._UserType = value;
				this.SendPropertyChanged("UserType");
				this.OnUserTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
	public System.Nullable<int> UserID
	{
		get
		{
			return this._UserID;
		}
		set
		{
			if ((this._UserID != value))
			{
				this.OnUserIDChanging(value);
				this.SendPropertyChanging();
				this._UserID = value;
				this.SendPropertyChanged("UserID");
				this.OnUserIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="Int")]
	public System.Nullable<int> AdminID
	{
		get
		{
			return this._AdminID;
		}
		set
		{
			if ((this._AdminID != value))
			{
				this.OnAdminIDChanging(value);
				this.SendPropertyChanging();
				this._AdminID = value;
				this.SendPropertyChanged("AdminID");
				this.OnAdminIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreatedOn
	{
		get
		{
			return this._CreatedOn;
		}
		set
		{
			if ((this._CreatedOn != value))
			{
				this.OnCreatedOnChanging(value);
				this.SendPropertyChanging();
				this._CreatedOn = value;
				this.SendPropertyChanged("CreatedOn");
				this.OnCreatedOnChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MacAddress", DbType="VarChar(100)")]
	public string MacAddress
	{
		get
		{
			return this._MacAddress;
		}
		set
		{
			if ((this._MacAddress != value))
			{
				this.OnMacAddressChanging(value);
				this.SendPropertyChanging();
				this._MacAddress = value;
				this.SendPropertyChanged("MacAddress");
				this.OnMacAddressChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblFeedback")]
public partial class tblFeedback : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _FeedBackID;
	
	private System.Nullable<int> _ClientID;
	
	private string _Email;
	
	private System.Nullable<bool> _IsNotify;
	
	private string _Description;
	
	private System.Nullable<System.DateTime> _CreatedOn;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFeedBackIDChanging(int value);
    partial void OnFeedBackIDChanged();
    partial void OnClientIDChanging(System.Nullable<int> value);
    partial void OnClientIDChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnIsNotifyChanging(System.Nullable<bool> value);
    partial void OnIsNotifyChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    #endregion
	
	public tblFeedback()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeedBackID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int FeedBackID
	{
		get
		{
			return this._FeedBackID;
		}
		set
		{
			if ((this._FeedBackID != value))
			{
				this.OnFeedBackIDChanging(value);
				this.SendPropertyChanging();
				this._FeedBackID = value;
				this.SendPropertyChanged("FeedBackID");
				this.OnFeedBackIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="Int")]
	public System.Nullable<int> ClientID
	{
		get
		{
			return this._ClientID;
		}
		set
		{
			if ((this._ClientID != value))
			{
				this.OnClientIDChanging(value);
				this.SendPropertyChanging();
				this._ClientID = value;
				this.SendPropertyChanged("ClientID");
				this.OnClientIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(250)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsNotify", DbType="Bit")]
	public System.Nullable<bool> IsNotify
	{
		get
		{
			return this._IsNotify;
		}
		set
		{
			if ((this._IsNotify != value))
			{
				this.OnIsNotifyChanging(value);
				this.SendPropertyChanging();
				this._IsNotify = value;
				this.SendPropertyChanged("IsNotify");
				this.OnIsNotifyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreatedOn
	{
		get
		{
			return this._CreatedOn;
		}
		set
		{
			if ((this._CreatedOn != value))
			{
				this.OnCreatedOnChanging(value);
				this.SendPropertyChanging();
				this._CreatedOn = value;
				this.SendPropertyChanged("CreatedOn");
				this.OnCreatedOnChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblImage")]
public partial class tblImage : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ImagesID;
	
	private int _AlbumID;
	
	private string _Name;
	
	private bool _IsActive;
	
	private System.DateTime _CreatedOn;
	
	private bool _IsDefault;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnImagesIDChanging(int value);
    partial void OnImagesIDChanged();
    partial void OnAlbumIDChanging(int value);
    partial void OnAlbumIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    partial void OnIsDefaultChanging(bool value);
    partial void OnIsDefaultChanged();
    #endregion
	
	public tblImage()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImagesID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ImagesID
	{
		get
		{
			return this._ImagesID;
		}
		set
		{
			if ((this._ImagesID != value))
			{
				this.OnImagesIDChanging(value);
				this.SendPropertyChanging();
				this._ImagesID = value;
				this.SendPropertyChanged("ImagesID");
				this.OnImagesIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlbumID", DbType="Int NOT NULL")]
	public int AlbumID
	{
		get
		{
			return this._AlbumID;
		}
		set
		{
			if ((this._AlbumID != value))
			{
				this.OnAlbumIDChanging(value);
				this.SendPropertyChanging();
				this._AlbumID = value;
				this.SendPropertyChanged("AlbumID");
				this.OnAlbumIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
	public bool IsActive
	{
		get
		{
			return this._IsActive;
		}
		set
		{
			if ((this._IsActive != value))
			{
				this.OnIsActiveChanging(value);
				this.SendPropertyChanging();
				this._IsActive = value;
				this.SendPropertyChanged("IsActive");
				this.OnIsActiveChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
	public System.DateTime CreatedOn
	{
		get
		{
			return this._CreatedOn;
		}
		set
		{
			if ((this._CreatedOn != value))
			{
				this.OnCreatedOnChanging(value);
				this.SendPropertyChanging();
				this._CreatedOn = value;
				this.SendPropertyChanged("CreatedOn");
				this.OnCreatedOnChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDefault", DbType="Bit NOT NULL")]
	public bool IsDefault
	{
		get
		{
			return this._IsDefault;
		}
		set
		{
			if ((this._IsDefault != value))
			{
				this.OnIsDefaultChanging(value);
				this.SendPropertyChanging();
				this._IsDefault = value;
				this.SendPropertyChanged("IsDefault");
				this.OnIsDefaultChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblInquiry")]
public partial class tblInquiry : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _InquiryID;
	
	private string _Email;
	
	private string _ContactNO;
	
	private string _Discription;
	
	private bool _IsNotify;
	
	private System.DateTime _Createdon;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInquiryIDChanging(int value);
    partial void OnInquiryIDChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnContactNOChanging(string value);
    partial void OnContactNOChanged();
    partial void OnDiscriptionChanging(string value);
    partial void OnDiscriptionChanged();
    partial void OnIsNotifyChanging(bool value);
    partial void OnIsNotifyChanged();
    partial void OnCreatedonChanging(System.DateTime value);
    partial void OnCreatedonChanged();
    #endregion
	
	public tblInquiry()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InquiryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int InquiryID
	{
		get
		{
			return this._InquiryID;
		}
		set
		{
			if ((this._InquiryID != value))
			{
				this.OnInquiryIDChanging(value);
				this.SendPropertyChanging();
				this._InquiryID = value;
				this.SendPropertyChanged("InquiryID");
				this.OnInquiryIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNO", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string ContactNO
	{
		get
		{
			return this._ContactNO;
		}
		set
		{
			if ((this._ContactNO != value))
			{
				this.OnContactNOChanging(value);
				this.SendPropertyChanging();
				this._ContactNO = value;
				this.SendPropertyChanged("ContactNO");
				this.OnContactNOChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discription", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
	public string Discription
	{
		get
		{
			return this._Discription;
		}
		set
		{
			if ((this._Discription != value))
			{
				this.OnDiscriptionChanging(value);
				this.SendPropertyChanging();
				this._Discription = value;
				this.SendPropertyChanged("Discription");
				this.OnDiscriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsNotify", DbType="Bit NOT NULL")]
	public bool IsNotify
	{
		get
		{
			return this._IsNotify;
		}
		set
		{
			if ((this._IsNotify != value))
			{
				this.OnIsNotifyChanging(value);
				this.SendPropertyChanging();
				this._IsNotify = value;
				this.SendPropertyChanged("IsNotify");
				this.OnIsNotifyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Createdon", DbType="DateTime NOT NULL")]
	public System.DateTime Createdon
	{
		get
		{
			return this._Createdon;
		}
		set
		{
			if ((this._Createdon != value))
			{
				this.OnCreatedonChanging(value);
				this.SendPropertyChanging();
				this._Createdon = value;
				this.SendPropertyChanged("Createdon");
				this.OnCreatedonChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblitem")]
public partial class tblitem : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ItemID;
	
	private int _MenuID;
	
	private int _ImageID;
	
	private string _ItemName;
	
	private decimal _ItemPrice;
	
	private string _ItemDescription;
	
	private string _Time;
	
	private string _ItemType;
	
	private System.Nullable<bool> _ItemStatus;
	
	private bool _Isactive;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIDChanging(int value);
    partial void OnItemIDChanged();
    partial void OnMenuIDChanging(int value);
    partial void OnMenuIDChanged();
    partial void OnImageIDChanging(int value);
    partial void OnImageIDChanged();
    partial void OnItemNameChanging(string value);
    partial void OnItemNameChanged();
    partial void OnItemPriceChanging(decimal value);
    partial void OnItemPriceChanged();
    partial void OnItemDescriptionChanging(string value);
    partial void OnItemDescriptionChanged();
    partial void OnTimeChanging(string value);
    partial void OnTimeChanged();
    partial void OnItemTypeChanging(string value);
    partial void OnItemTypeChanged();
    partial void OnItemStatusChanging(System.Nullable<bool> value);
    partial void OnItemStatusChanged();
    partial void OnIsactiveChanging(bool value);
    partial void OnIsactiveChanged();
    #endregion
	
	public tblitem()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ItemID
	{
		get
		{
			return this._ItemID;
		}
		set
		{
			if ((this._ItemID != value))
			{
				this.OnItemIDChanging(value);
				this.SendPropertyChanging();
				this._ItemID = value;
				this.SendPropertyChanged("ItemID");
				this.OnItemIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuID", DbType="Int NOT NULL")]
	public int MenuID
	{
		get
		{
			return this._MenuID;
		}
		set
		{
			if ((this._MenuID != value))
			{
				this.OnMenuIDChanging(value);
				this.SendPropertyChanging();
				this._MenuID = value;
				this.SendPropertyChanged("MenuID");
				this.OnMenuIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageID", DbType="Int NOT NULL")]
	public int ImageID
	{
		get
		{
			return this._ImageID;
		}
		set
		{
			if ((this._ImageID != value))
			{
				this.OnImageIDChanging(value);
				this.SendPropertyChanging();
				this._ImageID = value;
				this.SendPropertyChanged("ImageID");
				this.OnImageIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string ItemName
	{
		get
		{
			return this._ItemName;
		}
		set
		{
			if ((this._ItemName != value))
			{
				this.OnItemNameChanging(value);
				this.SendPropertyChanging();
				this._ItemName = value;
				this.SendPropertyChanged("ItemName");
				this.OnItemNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemPrice", DbType="Decimal(18,0) NOT NULL")]
	public decimal ItemPrice
	{
		get
		{
			return this._ItemPrice;
		}
		set
		{
			if ((this._ItemPrice != value))
			{
				this.OnItemPriceChanging(value);
				this.SendPropertyChanging();
				this._ItemPrice = value;
				this.SendPropertyChanged("ItemPrice");
				this.OnItemPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemDescription", DbType="VarChar(350) NOT NULL", CanBeNull=false)]
	public string ItemDescription
	{
		get
		{
			return this._ItemDescription;
		}
		set
		{
			if ((this._ItemDescription != value))
			{
				this.OnItemDescriptionChanging(value);
				this.SendPropertyChanging();
				this._ItemDescription = value;
				this.SendPropertyChanged("ItemDescription");
				this.OnItemDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="VarChar(20)")]
	public string Time
	{
		get
		{
			return this._Time;
		}
		set
		{
			if ((this._Time != value))
			{
				this.OnTimeChanging(value);
				this.SendPropertyChanging();
				this._Time = value;
				this.SendPropertyChanged("Time");
				this.OnTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemType", DbType="VarChar(10)")]
	public string ItemType
	{
		get
		{
			return this._ItemType;
		}
		set
		{
			if ((this._ItemType != value))
			{
				this.OnItemTypeChanging(value);
				this.SendPropertyChanging();
				this._ItemType = value;
				this.SendPropertyChanged("ItemType");
				this.OnItemTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemStatus", DbType="Bit")]
	public System.Nullable<bool> ItemStatus
	{
		get
		{
			return this._ItemStatus;
		}
		set
		{
			if ((this._ItemStatus != value))
			{
				this.OnItemStatusChanging(value);
				this.SendPropertyChanging();
				this._ItemStatus = value;
				this.SendPropertyChanged("ItemStatus");
				this.OnItemStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Isactive", DbType="Bit NOT NULL")]
	public bool Isactive
	{
		get
		{
			return this._Isactive;
		}
		set
		{
			if ((this._Isactive != value))
			{
				this.OnIsactiveChanging(value);
				this.SendPropertyChanging();
				this._Isactive = value;
				this.SendPropertyChanged("Isactive");
				this.OnIsactiveChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbllog")]
public partial class tbllog : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _LogID;
	
	private string _UserLogID;
	
	private System.Nullable<System.DateTime> _LoginTime;
	
	private System.DateTime _LogoutTime;
	
	private string _MacAddress;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogIDChanging(int value);
    partial void OnLogIDChanged();
    partial void OnUserLogIDChanging(string value);
    partial void OnUserLogIDChanged();
    partial void OnLoginTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLoginTimeChanged();
    partial void OnLogoutTimeChanging(System.DateTime value);
    partial void OnLogoutTimeChanged();
    partial void OnMacAddressChanging(string value);
    partial void OnMacAddressChanged();
    #endregion
	
	public tbllog()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int LogID
	{
		get
		{
			return this._LogID;
		}
		set
		{
			if ((this._LogID != value))
			{
				this.OnLogIDChanging(value);
				this.SendPropertyChanging();
				this._LogID = value;
				this.SendPropertyChanged("LogID");
				this.OnLogIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserLogID", DbType="VarChar(30)")]
	public string UserLogID
	{
		get
		{
			return this._UserLogID;
		}
		set
		{
			if ((this._UserLogID != value))
			{
				this.OnUserLogIDChanging(value);
				this.SendPropertyChanging();
				this._UserLogID = value;
				this.SendPropertyChanged("UserLogID");
				this.OnUserLogIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginTime", DbType="DateTime")]
	public System.Nullable<System.DateTime> LoginTime
	{
		get
		{
			return this._LoginTime;
		}
		set
		{
			if ((this._LoginTime != value))
			{
				this.OnLoginTimeChanging(value);
				this.SendPropertyChanging();
				this._LoginTime = value;
				this.SendPropertyChanged("LoginTime");
				this.OnLoginTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogoutTime", DbType="DateTime NOT NULL")]
	public System.DateTime LogoutTime
	{
		get
		{
			return this._LogoutTime;
		}
		set
		{
			if ((this._LogoutTime != value))
			{
				this.OnLogoutTimeChanging(value);
				this.SendPropertyChanging();
				this._LogoutTime = value;
				this.SendPropertyChanged("LogoutTime");
				this.OnLogoutTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MacAddress", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
	public string MacAddress
	{
		get
		{
			return this._MacAddress;
		}
		set
		{
			if ((this._MacAddress != value))
			{
				this.OnMacAddressChanging(value);
				this.SendPropertyChanging();
				this._MacAddress = value;
				this.SendPropertyChanged("MacAddress");
				this.OnMacAddressChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblMealPlan")]
public partial class tblMealPlan : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _MealID;
	
	private int _ServiceProviderID;
	
	private int _ImageID;
	
	private string _MealType;
	
	private string _MealName;
	
	private string _MealDescription;
	
	private int _MealPrice;
	
	private string _Time;
	
	private System.Nullable<bool> _TodaySpacial;
	
	private System.Nullable<bool> _MealStatus;
	
	private bool _IsActive;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMealIDChanging(int value);
    partial void OnMealIDChanged();
    partial void OnServiceProviderIDChanging(int value);
    partial void OnServiceProviderIDChanged();
    partial void OnImageIDChanging(int value);
    partial void OnImageIDChanged();
    partial void OnMealTypeChanging(string value);
    partial void OnMealTypeChanged();
    partial void OnMealNameChanging(string value);
    partial void OnMealNameChanged();
    partial void OnMealDescriptionChanging(string value);
    partial void OnMealDescriptionChanged();
    partial void OnMealPriceChanging(int value);
    partial void OnMealPriceChanged();
    partial void OnTimeChanging(string value);
    partial void OnTimeChanged();
    partial void OnTodaySpacialChanging(System.Nullable<bool> value);
    partial void OnTodaySpacialChanged();
    partial void OnMealStatusChanging(System.Nullable<bool> value);
    partial void OnMealStatusChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
	
	public tblMealPlan()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MealID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int MealID
	{
		get
		{
			return this._MealID;
		}
		set
		{
			if ((this._MealID != value))
			{
				this.OnMealIDChanging(value);
				this.SendPropertyChanging();
				this._MealID = value;
				this.SendPropertyChanged("MealID");
				this.OnMealIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceProviderID", DbType="Int NOT NULL")]
	public int ServiceProviderID
	{
		get
		{
			return this._ServiceProviderID;
		}
		set
		{
			if ((this._ServiceProviderID != value))
			{
				this.OnServiceProviderIDChanging(value);
				this.SendPropertyChanging();
				this._ServiceProviderID = value;
				this.SendPropertyChanged("ServiceProviderID");
				this.OnServiceProviderIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageID", DbType="Int NOT NULL")]
	public int ImageID
	{
		get
		{
			return this._ImageID;
		}
		set
		{
			if ((this._ImageID != value))
			{
				this.OnImageIDChanging(value);
				this.SendPropertyChanging();
				this._ImageID = value;
				this.SendPropertyChanged("ImageID");
				this.OnImageIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MealType", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string MealType
	{
		get
		{
			return this._MealType;
		}
		set
		{
			if ((this._MealType != value))
			{
				this.OnMealTypeChanging(value);
				this.SendPropertyChanging();
				this._MealType = value;
				this.SendPropertyChanged("MealType");
				this.OnMealTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MealName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string MealName
	{
		get
		{
			return this._MealName;
		}
		set
		{
			if ((this._MealName != value))
			{
				this.OnMealNameChanging(value);
				this.SendPropertyChanging();
				this._MealName = value;
				this.SendPropertyChanged("MealName");
				this.OnMealNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MealDescription", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
	public string MealDescription
	{
		get
		{
			return this._MealDescription;
		}
		set
		{
			if ((this._MealDescription != value))
			{
				this.OnMealDescriptionChanging(value);
				this.SendPropertyChanging();
				this._MealDescription = value;
				this.SendPropertyChanged("MealDescription");
				this.OnMealDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MealPrice", DbType="Int NOT NULL")]
	public int MealPrice
	{
		get
		{
			return this._MealPrice;
		}
		set
		{
			if ((this._MealPrice != value))
			{
				this.OnMealPriceChanging(value);
				this.SendPropertyChanging();
				this._MealPrice = value;
				this.SendPropertyChanged("MealPrice");
				this.OnMealPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="VarChar(20)")]
	public string Time
	{
		get
		{
			return this._Time;
		}
		set
		{
			if ((this._Time != value))
			{
				this.OnTimeChanging(value);
				this.SendPropertyChanging();
				this._Time = value;
				this.SendPropertyChanged("Time");
				this.OnTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TodaySpacial", DbType="Bit")]
	public System.Nullable<bool> TodaySpacial
	{
		get
		{
			return this._TodaySpacial;
		}
		set
		{
			if ((this._TodaySpacial != value))
			{
				this.OnTodaySpacialChanging(value);
				this.SendPropertyChanging();
				this._TodaySpacial = value;
				this.SendPropertyChanged("TodaySpacial");
				this.OnTodaySpacialChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MealStatus", DbType="Bit")]
	public System.Nullable<bool> MealStatus
	{
		get
		{
			return this._MealStatus;
		}
		set
		{
			if ((this._MealStatus != value))
			{
				this.OnMealStatusChanging(value);
				this.SendPropertyChanging();
				this._MealStatus = value;
				this.SendPropertyChanged("MealStatus");
				this.OnMealStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
	public bool IsActive
	{
		get
		{
			return this._IsActive;
		}
		set
		{
			if ((this._IsActive != value))
			{
				this.OnIsActiveChanging(value);
				this.SendPropertyChanging();
				this._IsActive = value;
				this.SendPropertyChanged("IsActive");
				this.OnIsActiveChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblMenuDetail")]
public partial class tblMenuDetail : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _MenuID;
	
	private int _ServiceProviderID;
	
	private int _ImageID;
	
	private string _MenuName;
	
	private string _MenuType;
	
	private bool _IsActive;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMenuIDChanging(int value);
    partial void OnMenuIDChanged();
    partial void OnServiceProviderIDChanging(int value);
    partial void OnServiceProviderIDChanged();
    partial void OnImageIDChanging(int value);
    partial void OnImageIDChanged();
    partial void OnMenuNameChanging(string value);
    partial void OnMenuNameChanged();
    partial void OnMenuTypeChanging(string value);
    partial void OnMenuTypeChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
	
	public tblMenuDetail()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int MenuID
	{
		get
		{
			return this._MenuID;
		}
		set
		{
			if ((this._MenuID != value))
			{
				this.OnMenuIDChanging(value);
				this.SendPropertyChanging();
				this._MenuID = value;
				this.SendPropertyChanged("MenuID");
				this.OnMenuIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceProviderID", DbType="Int NOT NULL")]
	public int ServiceProviderID
	{
		get
		{
			return this._ServiceProviderID;
		}
		set
		{
			if ((this._ServiceProviderID != value))
			{
				this.OnServiceProviderIDChanging(value);
				this.SendPropertyChanging();
				this._ServiceProviderID = value;
				this.SendPropertyChanged("ServiceProviderID");
				this.OnServiceProviderIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageID", DbType="Int NOT NULL")]
	public int ImageID
	{
		get
		{
			return this._ImageID;
		}
		set
		{
			if ((this._ImageID != value))
			{
				this.OnImageIDChanging(value);
				this.SendPropertyChanging();
				this._ImageID = value;
				this.SendPropertyChanged("ImageID");
				this.OnImageIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
	public string MenuName
	{
		get
		{
			return this._MenuName;
		}
		set
		{
			if ((this._MenuName != value))
			{
				this.OnMenuNameChanging(value);
				this.SendPropertyChanging();
				this._MenuName = value;
				this.SendPropertyChanged("MenuName");
				this.OnMenuNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuType", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string MenuType
	{
		get
		{
			return this._MenuType;
		}
		set
		{
			if ((this._MenuType != value))
			{
				this.OnMenuTypeChanging(value);
				this.SendPropertyChanging();
				this._MenuType = value;
				this.SendPropertyChanged("MenuType");
				this.OnMenuTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
	public bool IsActive
	{
		get
		{
			return this._IsActive;
		}
		set
		{
			if ((this._IsActive != value))
			{
				this.OnIsActiveChanging(value);
				this.SendPropertyChanging();
				this._IsActive = value;
				this.SendPropertyChanged("IsActive");
				this.OnIsActiveChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblNotification")]
public partial class tblNotification : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _NotificationID;
	
	private string _Title;
	
	private string _Description;
	
	private System.DateTime _CreatedOn;
	
	private int _CreatedBy;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNotificationIDChanging(int value);
    partial void OnNotificationIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    #endregion
	
	public tblNotification()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int NotificationID
	{
		get
		{
			return this._NotificationID;
		}
		set
		{
			if ((this._NotificationID != value))
			{
				this.OnNotificationIDChanging(value);
				this.SendPropertyChanging();
				this._NotificationID = value;
				this.SendPropertyChanged("NotificationID");
				this.OnNotificationIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Title
	{
		get
		{
			return this._Title;
		}
		set
		{
			if ((this._Title != value))
			{
				this.OnTitleChanging(value);
				this.SendPropertyChanging();
				this._Title = value;
				this.SendPropertyChanged("Title");
				this.OnTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
	public System.DateTime CreatedOn
	{
		get
		{
			return this._CreatedOn;
		}
		set
		{
			if ((this._CreatedOn != value))
			{
				this.OnCreatedOnChanging(value);
				this.SendPropertyChanging();
				this._CreatedOn = value;
				this.SendPropertyChanged("CreatedOn");
				this.OnCreatedOnChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
	public int CreatedBy
	{
		get
		{
			return this._CreatedBy;
		}
		set
		{
			if ((this._CreatedBy != value))
			{
				this.OnCreatedByChanging(value);
				this.SendPropertyChanging();
				this._CreatedBy = value;
				this.SendPropertyChanged("CreatedBy");
				this.OnCreatedByChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblNotificationDetail")]
public partial class tblNotificationDetail : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _NotificationdetailID;
	
	private int _NotificationID;
	
	private int _AdminID;
	
	private bool _IsRead;
	
	private bool _IsNotify;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNotificationdetailIDChanging(int value);
    partial void OnNotificationdetailIDChanged();
    partial void OnNotificationIDChanging(int value);
    partial void OnNotificationIDChanged();
    partial void OnAdminIDChanging(int value);
    partial void OnAdminIDChanged();
    partial void OnIsReadChanging(bool value);
    partial void OnIsReadChanged();
    partial void OnIsNotifyChanging(bool value);
    partial void OnIsNotifyChanged();
    #endregion
	
	public tblNotificationDetail()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationdetailID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int NotificationdetailID
	{
		get
		{
			return this._NotificationdetailID;
		}
		set
		{
			if ((this._NotificationdetailID != value))
			{
				this.OnNotificationdetailIDChanging(value);
				this.SendPropertyChanging();
				this._NotificationdetailID = value;
				this.SendPropertyChanged("NotificationdetailID");
				this.OnNotificationdetailIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationID", DbType="Int NOT NULL")]
	public int NotificationID
	{
		get
		{
			return this._NotificationID;
		}
		set
		{
			if ((this._NotificationID != value))
			{
				this.OnNotificationIDChanging(value);
				this.SendPropertyChanging();
				this._NotificationID = value;
				this.SendPropertyChanged("NotificationID");
				this.OnNotificationIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="Int NOT NULL")]
	public int AdminID
	{
		get
		{
			return this._AdminID;
		}
		set
		{
			if ((this._AdminID != value))
			{
				this.OnAdminIDChanging(value);
				this.SendPropertyChanging();
				this._AdminID = value;
				this.SendPropertyChanged("AdminID");
				this.OnAdminIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRead", DbType="Bit NOT NULL")]
	public bool IsRead
	{
		get
		{
			return this._IsRead;
		}
		set
		{
			if ((this._IsRead != value))
			{
				this.OnIsReadChanging(value);
				this.SendPropertyChanging();
				this._IsRead = value;
				this.SendPropertyChanged("IsRead");
				this.OnIsReadChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsNotify", DbType="Bit NOT NULL")]
	public bool IsNotify
	{
		get
		{
			return this._IsNotify;
		}
		set
		{
			if ((this._IsNotify != value))
			{
				this.OnIsNotifyChanging(value);
				this.SendPropertyChanging();
				this._IsNotify = value;
				this.SendPropertyChanged("IsNotify");
				this.OnIsNotifyChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblOrder")]
public partial class tblOrder : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _OrderID;
	
	private System.Nullable<int> _ItemID;
	
	private System.Nullable<int> _MealID;
	
	private int _ClientID;
	
	private string _MACAddress;
	
	private System.Nullable<bool> _IsRecurring;
	
	private string _RecurringType;
	
	private string _ShippingAddress;
	
	private string _BillingAddress;
	
	private System.Nullable<int> _Qty;
	
	private decimal _TotalAmount;
	
	private System.DateTime _Date;
	
	private bool _IsActive;
	
	private System.Nullable<bool> _IsOrder;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderIDChanging(int value);
    partial void OnOrderIDChanged();
    partial void OnItemIDChanging(System.Nullable<int> value);
    partial void OnItemIDChanged();
    partial void OnMealIDChanging(System.Nullable<int> value);
    partial void OnMealIDChanged();
    partial void OnClientIDChanging(int value);
    partial void OnClientIDChanged();
    partial void OnMACAddressChanging(string value);
    partial void OnMACAddressChanged();
    partial void OnIsRecurringChanging(System.Nullable<bool> value);
    partial void OnIsRecurringChanged();
    partial void OnRecurringTypeChanging(string value);
    partial void OnRecurringTypeChanged();
    partial void OnShippingAddressChanging(string value);
    partial void OnShippingAddressChanged();
    partial void OnBillingAddressChanging(string value);
    partial void OnBillingAddressChanged();
    partial void OnQtyChanging(System.Nullable<int> value);
    partial void OnQtyChanged();
    partial void OnTotalAmountChanging(decimal value);
    partial void OnTotalAmountChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnIsOrderChanging(System.Nullable<bool> value);
    partial void OnIsOrderChanged();
    #endregion
	
	public tblOrder()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int OrderID
	{
		get
		{
			return this._OrderID;
		}
		set
		{
			if ((this._OrderID != value))
			{
				this.OnOrderIDChanging(value);
				this.SendPropertyChanging();
				this._OrderID = value;
				this.SendPropertyChanged("OrderID");
				this.OnOrderIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", DbType="Int")]
	public System.Nullable<int> ItemID
	{
		get
		{
			return this._ItemID;
		}
		set
		{
			if ((this._ItemID != value))
			{
				this.OnItemIDChanging(value);
				this.SendPropertyChanging();
				this._ItemID = value;
				this.SendPropertyChanged("ItemID");
				this.OnItemIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MealID", DbType="Int")]
	public System.Nullable<int> MealID
	{
		get
		{
			return this._MealID;
		}
		set
		{
			if ((this._MealID != value))
			{
				this.OnMealIDChanging(value);
				this.SendPropertyChanging();
				this._MealID = value;
				this.SendPropertyChanged("MealID");
				this.OnMealIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="Int NOT NULL")]
	public int ClientID
	{
		get
		{
			return this._ClientID;
		}
		set
		{
			if ((this._ClientID != value))
			{
				this.OnClientIDChanging(value);
				this.SendPropertyChanging();
				this._ClientID = value;
				this.SendPropertyChanged("ClientID");
				this.OnClientIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MACAddress", DbType="VarChar(12)")]
	public string MACAddress
	{
		get
		{
			return this._MACAddress;
		}
		set
		{
			if ((this._MACAddress != value))
			{
				this.OnMACAddressChanging(value);
				this.SendPropertyChanging();
				this._MACAddress = value;
				this.SendPropertyChanged("MACAddress");
				this.OnMACAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRecurring", DbType="Bit")]
	public System.Nullable<bool> IsRecurring
	{
		get
		{
			return this._IsRecurring;
		}
		set
		{
			if ((this._IsRecurring != value))
			{
				this.OnIsRecurringChanging(value);
				this.SendPropertyChanging();
				this._IsRecurring = value;
				this.SendPropertyChanged("IsRecurring");
				this.OnIsRecurringChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurringType", DbType="VarChar(30)")]
	public string RecurringType
	{
		get
		{
			return this._RecurringType;
		}
		set
		{
			if ((this._RecurringType != value))
			{
				this.OnRecurringTypeChanging(value);
				this.SendPropertyChanging();
				this._RecurringType = value;
				this.SendPropertyChanged("RecurringType");
				this.OnRecurringTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingAddress", DbType="VarChar(MAX)")]
	public string ShippingAddress
	{
		get
		{
			return this._ShippingAddress;
		}
		set
		{
			if ((this._ShippingAddress != value))
			{
				this.OnShippingAddressChanging(value);
				this.SendPropertyChanging();
				this._ShippingAddress = value;
				this.SendPropertyChanged("ShippingAddress");
				this.OnShippingAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillingAddress", DbType="VarChar(MAX)")]
	public string BillingAddress
	{
		get
		{
			return this._BillingAddress;
		}
		set
		{
			if ((this._BillingAddress != value))
			{
				this.OnBillingAddressChanging(value);
				this.SendPropertyChanging();
				this._BillingAddress = value;
				this.SendPropertyChanged("BillingAddress");
				this.OnBillingAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qty", DbType="Int")]
	public System.Nullable<int> Qty
	{
		get
		{
			return this._Qty;
		}
		set
		{
			if ((this._Qty != value))
			{
				this.OnQtyChanging(value);
				this.SendPropertyChanging();
				this._Qty = value;
				this.SendPropertyChanged("Qty");
				this.OnQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAmount", DbType="Decimal(18,0) NOT NULL")]
	public decimal TotalAmount
	{
		get
		{
			return this._TotalAmount;
		}
		set
		{
			if ((this._TotalAmount != value))
			{
				this.OnTotalAmountChanging(value);
				this.SendPropertyChanging();
				this._TotalAmount = value;
				this.SendPropertyChanged("TotalAmount");
				this.OnTotalAmountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
	public System.DateTime Date
	{
		get
		{
			return this._Date;
		}
		set
		{
			if ((this._Date != value))
			{
				this.OnDateChanging(value);
				this.SendPropertyChanging();
				this._Date = value;
				this.SendPropertyChanged("Date");
				this.OnDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
	public bool IsActive
	{
		get
		{
			return this._IsActive;
		}
		set
		{
			if ((this._IsActive != value))
			{
				this.OnIsActiveChanging(value);
				this.SendPropertyChanging();
				this._IsActive = value;
				this.SendPropertyChanged("IsActive");
				this.OnIsActiveChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOrder", DbType="Bit")]
	public System.Nullable<bool> IsOrder
	{
		get
		{
			return this._IsOrder;
		}
		set
		{
			if ((this._IsOrder != value))
			{
				this.OnIsOrderChanging(value);
				this.SendPropertyChanging();
				this._IsOrder = value;
				this.SendPropertyChanged("IsOrder");
				this.OnIsOrderChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblPackages")]
public partial class tblPackage : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _PackagesID;
	
	private string _Name;
	
	private decimal _Duration;
	
	private System.Nullable<int> _ImageID;
	
	private string _Description;
	
	private double _Price;
	
	private System.Nullable<int> _CreatedBy;
	
	private System.DateTime _CreatedOn;
	
	private System.Nullable<bool> _IsActive;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPackagesIDChanging(int value);
    partial void OnPackagesIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDurationChanging(decimal value);
    partial void OnDurationChanged();
    partial void OnImageIDChanging(System.Nullable<int> value);
    partial void OnImageIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPriceChanging(double value);
    partial void OnPriceChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    #endregion
	
	public tblPackage()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackagesID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int PackagesID
	{
		get
		{
			return this._PackagesID;
		}
		set
		{
			if ((this._PackagesID != value))
			{
				this.OnPackagesIDChanging(value);
				this.SendPropertyChanging();
				this._PackagesID = value;
				this.SendPropertyChanged("PackagesID");
				this.OnPackagesIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="Decimal(18,0) NOT NULL")]
	public decimal Duration
	{
		get
		{
			return this._Duration;
		}
		set
		{
			if ((this._Duration != value))
			{
				this.OnDurationChanging(value);
				this.SendPropertyChanging();
				this._Duration = value;
				this.SendPropertyChanged("Duration");
				this.OnDurationChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageID", DbType="Int")]
	public System.Nullable<int> ImageID
	{
		get
		{
			return this._ImageID;
		}
		set
		{
			if ((this._ImageID != value))
			{
				this.OnImageIDChanging(value);
				this.SendPropertyChanging();
				this._ImageID = value;
				this.SendPropertyChanged("ImageID");
				this.OnImageIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float NOT NULL")]
	public double Price
	{
		get
		{
			return this._Price;
		}
		set
		{
			if ((this._Price != value))
			{
				this.OnPriceChanging(value);
				this.SendPropertyChanging();
				this._Price = value;
				this.SendPropertyChanged("Price");
				this.OnPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
	public System.Nullable<int> CreatedBy
	{
		get
		{
			return this._CreatedBy;
		}
		set
		{
			if ((this._CreatedBy != value))
			{
				this.OnCreatedByChanging(value);
				this.SendPropertyChanging();
				this._CreatedBy = value;
				this.SendPropertyChanged("CreatedBy");
				this.OnCreatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="Date NOT NULL")]
	public System.DateTime CreatedOn
	{
		get
		{
			return this._CreatedOn;
		}
		set
		{
			if ((this._CreatedOn != value))
			{
				this.OnCreatedOnChanging(value);
				this.SendPropertyChanging();
				this._CreatedOn = value;
				this.SendPropertyChanged("CreatedOn");
				this.OnCreatedOnChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
	public System.Nullable<bool> IsActive
	{
		get
		{
			return this._IsActive;
		}
		set
		{
			if ((this._IsActive != value))
			{
				this.OnIsActiveChanging(value);
				this.SendPropertyChanging();
				this._IsActive = value;
				this.SendPropertyChanged("IsActive");
				this.OnIsActiveChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblRate")]
public partial class tblRate : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _RateID;
	
	private int _FoodID;
	
	private bool _IsItem;
	
	private int _Point;
	
	private System.DateTime _CreatedOn;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRateIDChanging(int value);
    partial void OnRateIDChanged();
    partial void OnFoodIDChanging(int value);
    partial void OnFoodIDChanged();
    partial void OnIsItemChanging(bool value);
    partial void OnIsItemChanged();
    partial void OnPointChanging(int value);
    partial void OnPointChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    #endregion
	
	public tblRate()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RateID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int RateID
	{
		get
		{
			return this._RateID;
		}
		set
		{
			if ((this._RateID != value))
			{
				this.OnRateIDChanging(value);
				this.SendPropertyChanging();
				this._RateID = value;
				this.SendPropertyChanged("RateID");
				this.OnRateIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FoodID", DbType="Int NOT NULL")]
	public int FoodID
	{
		get
		{
			return this._FoodID;
		}
		set
		{
			if ((this._FoodID != value))
			{
				this.OnFoodIDChanging(value);
				this.SendPropertyChanging();
				this._FoodID = value;
				this.SendPropertyChanged("FoodID");
				this.OnFoodIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsItem", DbType="Bit NOT NULL")]
	public bool IsItem
	{
		get
		{
			return this._IsItem;
		}
		set
		{
			if ((this._IsItem != value))
			{
				this.OnIsItemChanging(value);
				this.SendPropertyChanging();
				this._IsItem = value;
				this.SendPropertyChanged("IsItem");
				this.OnIsItemChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Point", DbType="Int NOT NULL")]
	public int Point
	{
		get
		{
			return this._Point;
		}
		set
		{
			if ((this._Point != value))
			{
				this.OnPointChanging(value);
				this.SendPropertyChanging();
				this._Point = value;
				this.SendPropertyChanged("Point");
				this.OnPointChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="Date NOT NULL")]
	public System.DateTime CreatedOn
	{
		get
		{
			return this._CreatedOn;
		}
		set
		{
			if ((this._CreatedOn != value))
			{
				this.OnCreatedOnChanging(value);
				this.SendPropertyChanging();
				this._CreatedOn = value;
				this.SendPropertyChanged("CreatedOn");
				this.OnCreatedOnChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblreferfriend")]
public partial class tblreferfriend : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ReferFriendID;
	
	private string _ReferEmailID;
	
	private System.Nullable<int> _ClientID;
	
	private System.Nullable<int> _ServiceProviderID;
	
	private System.Nullable<System.DateTime> _ReferDate;
	
	private string _Discription;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReferFriendIDChanging(int value);
    partial void OnReferFriendIDChanged();
    partial void OnReferEmailIDChanging(string value);
    partial void OnReferEmailIDChanged();
    partial void OnClientIDChanging(System.Nullable<int> value);
    partial void OnClientIDChanged();
    partial void OnServiceProviderIDChanging(System.Nullable<int> value);
    partial void OnServiceProviderIDChanged();
    partial void OnReferDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReferDateChanged();
    partial void OnDiscriptionChanging(string value);
    partial void OnDiscriptionChanged();
    #endregion
	
	public tblreferfriend()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferFriendID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ReferFriendID
	{
		get
		{
			return this._ReferFriendID;
		}
		set
		{
			if ((this._ReferFriendID != value))
			{
				this.OnReferFriendIDChanging(value);
				this.SendPropertyChanging();
				this._ReferFriendID = value;
				this.SendPropertyChanged("ReferFriendID");
				this.OnReferFriendIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferEmailID", DbType="VarChar(50)")]
	public string ReferEmailID
	{
		get
		{
			return this._ReferEmailID;
		}
		set
		{
			if ((this._ReferEmailID != value))
			{
				this.OnReferEmailIDChanging(value);
				this.SendPropertyChanging();
				this._ReferEmailID = value;
				this.SendPropertyChanged("ReferEmailID");
				this.OnReferEmailIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="Int")]
	public System.Nullable<int> ClientID
	{
		get
		{
			return this._ClientID;
		}
		set
		{
			if ((this._ClientID != value))
			{
				this.OnClientIDChanging(value);
				this.SendPropertyChanging();
				this._ClientID = value;
				this.SendPropertyChanged("ClientID");
				this.OnClientIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceProviderID", DbType="Int")]
	public System.Nullable<int> ServiceProviderID
	{
		get
		{
			return this._ServiceProviderID;
		}
		set
		{
			if ((this._ServiceProviderID != value))
			{
				this.OnServiceProviderIDChanging(value);
				this.SendPropertyChanging();
				this._ServiceProviderID = value;
				this.SendPropertyChanged("ServiceProviderID");
				this.OnServiceProviderIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> ReferDate
	{
		get
		{
			return this._ReferDate;
		}
		set
		{
			if ((this._ReferDate != value))
			{
				this.OnReferDateChanging(value);
				this.SendPropertyChanging();
				this._ReferDate = value;
				this.SendPropertyChanged("ReferDate");
				this.OnReferDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discription", DbType="VarChar(MAX)")]
	public string Discription
	{
		get
		{
			return this._Discription;
		}
		set
		{
			if ((this._Discription != value))
			{
				this.OnDiscriptionChanging(value);
				this.SendPropertyChanging();
				this._Discription = value;
				this.SendPropertyChanged("Discription");
				this.OnDiscriptionChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblServiceProvider")]
public partial class tblServiceProvider : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ServiceProviderID;
	
	private string _FirstName;
	
	private string _LastName;
	
	private string _Email;
	
	private string _Password;
	
	private int _AddressID;
	
	private string _ContactNo;
	
	private string _CompanyName;
	
	private int _ImageID;
	
	private bool _IsActive;
	
	private string _Veg_NonVeg;
	
	private System.Nullable<int> _VerifyBy;
	
	private System.DateTime _CreatedOn;
	
	private System.Nullable<bool> _IsVerify;
	
	private System.Nullable<bool> _IsVerifyByAdmin;
	
	private string _VerifyCode;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnServiceProviderIDChanging(int value);
    partial void OnServiceProviderIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnAddressIDChanging(int value);
    partial void OnAddressIDChanged();
    partial void OnContactNoChanging(string value);
    partial void OnContactNoChanged();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    partial void OnImageIDChanging(int value);
    partial void OnImageIDChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnVeg_NonVegChanging(string value);
    partial void OnVeg_NonVegChanged();
    partial void OnVerifyByChanging(System.Nullable<int> value);
    partial void OnVerifyByChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    partial void OnIsVerifyChanging(System.Nullable<bool> value);
    partial void OnIsVerifyChanged();
    partial void OnIsVerifyByAdminChanging(System.Nullable<bool> value);
    partial void OnIsVerifyByAdminChanged();
    partial void OnVerifyCodeChanging(string value);
    partial void OnVerifyCodeChanged();
    #endregion
	
	public tblServiceProvider()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceProviderID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ServiceProviderID
	{
		get
		{
			return this._ServiceProviderID;
		}
		set
		{
			if ((this._ServiceProviderID != value))
			{
				this.OnServiceProviderIDChanging(value);
				this.SendPropertyChanging();
				this._ServiceProviderID = value;
				this.SendPropertyChanged("ServiceProviderID");
				this.OnServiceProviderIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string FirstName
	{
		get
		{
			return this._FirstName;
		}
		set
		{
			if ((this._FirstName != value))
			{
				this.OnFirstNameChanging(value);
				this.SendPropertyChanging();
				this._FirstName = value;
				this.SendPropertyChanged("FirstName");
				this.OnFirstNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string LastName
	{
		get
		{
			return this._LastName;
		}
		set
		{
			if ((this._LastName != value))
			{
				this.OnLastNameChanging(value);
				this.SendPropertyChanging();
				this._LastName = value;
				this.SendPropertyChanged("LastName");
				this.OnLastNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(254) NOT NULL", CanBeNull=false)]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
	public string Password
	{
		get
		{
			return this._Password;
		}
		set
		{
			if ((this._Password != value))
			{
				this.OnPasswordChanging(value);
				this.SendPropertyChanging();
				this._Password = value;
				this.SendPropertyChanged("Password");
				this.OnPasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressID", DbType="Int NOT NULL")]
	public int AddressID
	{
		get
		{
			return this._AddressID;
		}
		set
		{
			if ((this._AddressID != value))
			{
				this.OnAddressIDChanging(value);
				this.SendPropertyChanging();
				this._AddressID = value;
				this.SendPropertyChanged("AddressID");
				this.OnAddressIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNo", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
	public string ContactNo
	{
		get
		{
			return this._ContactNo;
		}
		set
		{
			if ((this._ContactNo != value))
			{
				this.OnContactNoChanging(value);
				this.SendPropertyChanging();
				this._ContactNo = value;
				this.SendPropertyChanged("ContactNo");
				this.OnContactNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
	public string CompanyName
	{
		get
		{
			return this._CompanyName;
		}
		set
		{
			if ((this._CompanyName != value))
			{
				this.OnCompanyNameChanging(value);
				this.SendPropertyChanging();
				this._CompanyName = value;
				this.SendPropertyChanged("CompanyName");
				this.OnCompanyNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageID", DbType="Int NOT NULL")]
	public int ImageID
	{
		get
		{
			return this._ImageID;
		}
		set
		{
			if ((this._ImageID != value))
			{
				this.OnImageIDChanging(value);
				this.SendPropertyChanging();
				this._ImageID = value;
				this.SendPropertyChanged("ImageID");
				this.OnImageIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
	public bool IsActive
	{
		get
		{
			return this._IsActive;
		}
		set
		{
			if ((this._IsActive != value))
			{
				this.OnIsActiveChanging(value);
				this.SendPropertyChanging();
				this._IsActive = value;
				this.SendPropertyChanged("IsActive");
				this.OnIsActiveChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Veg_NonVeg", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Veg_NonVeg
	{
		get
		{
			return this._Veg_NonVeg;
		}
		set
		{
			if ((this._Veg_NonVeg != value))
			{
				this.OnVeg_NonVegChanging(value);
				this.SendPropertyChanging();
				this._Veg_NonVeg = value;
				this.SendPropertyChanged("Veg_NonVeg");
				this.OnVeg_NonVegChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerifyBy", DbType="Int")]
	public System.Nullable<int> VerifyBy
	{
		get
		{
			return this._VerifyBy;
		}
		set
		{
			if ((this._VerifyBy != value))
			{
				this.OnVerifyByChanging(value);
				this.SendPropertyChanging();
				this._VerifyBy = value;
				this.SendPropertyChanged("VerifyBy");
				this.OnVerifyByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="Date NOT NULL")]
	public System.DateTime CreatedOn
	{
		get
		{
			return this._CreatedOn;
		}
		set
		{
			if ((this._CreatedOn != value))
			{
				this.OnCreatedOnChanging(value);
				this.SendPropertyChanging();
				this._CreatedOn = value;
				this.SendPropertyChanged("CreatedOn");
				this.OnCreatedOnChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVerify", DbType="Bit")]
	public System.Nullable<bool> IsVerify
	{
		get
		{
			return this._IsVerify;
		}
		set
		{
			if ((this._IsVerify != value))
			{
				this.OnIsVerifyChanging(value);
				this.SendPropertyChanging();
				this._IsVerify = value;
				this.SendPropertyChanged("IsVerify");
				this.OnIsVerifyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVerifyByAdmin", DbType="Bit")]
	public System.Nullable<bool> IsVerifyByAdmin
	{
		get
		{
			return this._IsVerifyByAdmin;
		}
		set
		{
			if ((this._IsVerifyByAdmin != value))
			{
				this.OnIsVerifyByAdminChanging(value);
				this.SendPropertyChanging();
				this._IsVerifyByAdmin = value;
				this.SendPropertyChanged("IsVerifyByAdmin");
				this.OnIsVerifyByAdminChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerifyCode", DbType="VarChar(50)")]
	public string VerifyCode
	{
		get
		{
			return this._VerifyCode;
		}
		set
		{
			if ((this._VerifyCode != value))
			{
				this.OnVerifyCodeChanging(value);
				this.SendPropertyChanging();
				this._VerifyCode = value;
				this.SendPropertyChanged("VerifyCode");
				this.OnVerifyCodeChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblSPPackages")]
public partial class tblSPPackage : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _SPPackagesID;
	
	private int _ServiceProviderID;
	
	private int _PackagesId;
	
	private System.DateTime _Start_Date;
	
	private System.DateTime _End_Date;
	
	private int _CreatedBy;
	
	private bool _IsActive;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSPPackagesIDChanging(int value);
    partial void OnSPPackagesIDChanged();
    partial void OnServiceProviderIDChanging(int value);
    partial void OnServiceProviderIDChanged();
    partial void OnPackagesIdChanging(int value);
    partial void OnPackagesIdChanged();
    partial void OnStart_DateChanging(System.DateTime value);
    partial void OnStart_DateChanged();
    partial void OnEnd_DateChanging(System.DateTime value);
    partial void OnEnd_DateChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
	
	public tblSPPackage()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SPPackagesID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int SPPackagesID
	{
		get
		{
			return this._SPPackagesID;
		}
		set
		{
			if ((this._SPPackagesID != value))
			{
				this.OnSPPackagesIDChanging(value);
				this.SendPropertyChanging();
				this._SPPackagesID = value;
				this.SendPropertyChanged("SPPackagesID");
				this.OnSPPackagesIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceProviderID", DbType="Int NOT NULL")]
	public int ServiceProviderID
	{
		get
		{
			return this._ServiceProviderID;
		}
		set
		{
			if ((this._ServiceProviderID != value))
			{
				this.OnServiceProviderIDChanging(value);
				this.SendPropertyChanging();
				this._ServiceProviderID = value;
				this.SendPropertyChanged("ServiceProviderID");
				this.OnServiceProviderIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackagesId", DbType="Int NOT NULL")]
	public int PackagesId
	{
		get
		{
			return this._PackagesId;
		}
		set
		{
			if ((this._PackagesId != value))
			{
				this.OnPackagesIdChanging(value);
				this.SendPropertyChanging();
				this._PackagesId = value;
				this.SendPropertyChanged("PackagesId");
				this.OnPackagesIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Start_Date", DbType="Date NOT NULL")]
	public System.DateTime Start_Date
	{
		get
		{
			return this._Start_Date;
		}
		set
		{
			if ((this._Start_Date != value))
			{
				this.OnStart_DateChanging(value);
				this.SendPropertyChanging();
				this._Start_Date = value;
				this.SendPropertyChanged("Start_Date");
				this.OnStart_DateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_End_Date", DbType="Date NOT NULL")]
	public System.DateTime End_Date
	{
		get
		{
			return this._End_Date;
		}
		set
		{
			if ((this._End_Date != value))
			{
				this.OnEnd_DateChanging(value);
				this.SendPropertyChanging();
				this._End_Date = value;
				this.SendPropertyChanged("End_Date");
				this.OnEnd_DateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
	public int CreatedBy
	{
		get
		{
			return this._CreatedBy;
		}
		set
		{
			if ((this._CreatedBy != value))
			{
				this.OnCreatedByChanging(value);
				this.SendPropertyChanging();
				this._CreatedBy = value;
				this.SendPropertyChanged("CreatedBy");
				this.OnCreatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
	public bool IsActive
	{
		get
		{
			return this._IsActive;
		}
		set
		{
			if ((this._IsActive != value))
			{
				this.OnIsActiveChanging(value);
				this.SendPropertyChanging();
				this._IsActive = value;
				this.SendPropertyChanged("IsActive");
				this.OnIsActiveChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblSreviceOrder")]
public partial class tblSreviceOrder : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ServiceOrderID;
	
	private int _OrderDetailID;
	
	private bool _IsActive;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnServiceOrderIDChanging(int value);
    partial void OnServiceOrderIDChanged();
    partial void OnOrderDetailIDChanging(int value);
    partial void OnOrderDetailIDChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
	
	public tblSreviceOrder()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceOrderID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int ServiceOrderID
	{
		get
		{
			return this._ServiceOrderID;
		}
		set
		{
			if ((this._ServiceOrderID != value))
			{
				this.OnServiceOrderIDChanging(value);
				this.SendPropertyChanging();
				this._ServiceOrderID = value;
				this.SendPropertyChanged("ServiceOrderID");
				this.OnServiceOrderIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderDetailID", DbType="Int NOT NULL")]
	public int OrderDetailID
	{
		get
		{
			return this._OrderDetailID;
		}
		set
		{
			if ((this._OrderDetailID != value))
			{
				this.OnOrderDetailIDChanging(value);
				this.SendPropertyChanging();
				this._OrderDetailID = value;
				this.SendPropertyChanged("OrderDetailID");
				this.OnOrderDetailIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
	public bool IsActive
	{
		get
		{
			return this._IsActive;
		}
		set
		{
			if ((this._IsActive != value))
			{
				this.OnIsActiveChanging(value);
				this.SendPropertyChanging();
				this._IsActive = value;
				this.SendPropertyChanged("IsActive");
				this.OnIsActiveChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
